# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 50055483105a0234d9fb9d2eaf623033f583b31856f280a75f4d3877ea68046f # shrinks to (initial_state, transitions, seen_counter) = (RepoRefState { root: Directory { gamma: RegularFile { contents: "", executable: false } } }, [CreateFile { path: "gamma", contents: "", executable: true }], None)
cc 7f8b4d5e36149675c133884be076c13317673a2fe0484986a2faf667924af673 # shrinks to (initial_state, transitions, seen_counter) = (RepoRefState { root: Directory { gamma: Directory { alpha: RegularFile { contents: "", executable: false } } } }, [CreateFile { path: "gamma", contents: "", executable: false }], None)
cc 5772f1e7c681bf4b8843fc82a74f14a8bea5b63118ecb8232e1854b4bedc5a99 # shrinks to (initial_state, transitions, seen_counter) = (WorkingCopyState { entries: {"": Directory} }, [SetDirEntry { path: ".", dir_entry: Some(File { contents: "", executable: false }) }], None)
cc 8a004f51550fa516b18d4f138d73aadbe5f37ff74027d165a687f10b0f6081e6 # shrinks to (initial_state, transitions, seen_counter) = (WorkingCopyState { entries: {"": Directory} }, [SetDirEntry { path: "a", dir_entry: Some(File { contents: "", executable: false }) }, Commit, SetDirEntry { path: "a", dir_entry: Some(File { contents: "", executable: true }) }], None)
cc f880a9df632d665ebe3324106649756d382fcc6ca405938eb12ecf5cab8d8094 # shrinks to (initial_state, transitions, seen_counter) = (WorkingCopyReferenceStateMachine { entries: {"": Directory} }, [SetDirEntry { path: "a", dir_entry: Some(File { contents: "\0", executable: false }) }, Commit, SetDirEntry { path: "a", dir_entry: None }], None)
